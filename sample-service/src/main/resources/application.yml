server:
  port: 8080

spring:
  devtools:
    livereload:
      port: 35731

  output:
    ansi:
      enabled: always

  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp

  jpa:
    database: h2 # MySQL 을 사용할 것.
    show-sql: true # API 호출시, SQL 문을 콘솔에 출력한다.
    hibernate:
      ddl-auto: update # DDL 정의시 데이터베이스의 고유 기능을 지정합니다.
    open-in-view: true
    database-platform: org.hibernate.dialect.MySQL5Dialect # MySQL 상세 지정

# ========================================
# = JDBC Connection url for the database
# ========================================
## MySQL 설정
#  datasource: # MySQL 설정
#    url: jdbc:log4jdbc:mysql://localhost:3306/store?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&useSSL=true&serverTimezone=UTC
#    username: iu
#    password: iu1004
#    driverClassName: net.sf.log4jdbc.sql.jdbcapi.DriverSpy


## H2 설정
  datasource:
      url: jdbc:log4jdbc:h2:mem:testdb;DB_CLOSE_DELAY=- 1;DB_CLOSE_ON_EXIT=FALSE
      username: sa
      password:
#      driverClassName: org.h2.Driver
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      data: classpath:data-h2.sql # 시작할때 실행시킬 script
  h2:
    console:
      enabled: true

      
      
multipart:
  maxFileSize: 1MB
  maxRequestSize: 1MB